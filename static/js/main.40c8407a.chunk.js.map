{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-iteam.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","otherItems","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdd","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","impotrant","arr","propsName","oldItem","items","toLowerCase","indexOf","visibleItems","search","doneCount","length","toDoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40c8407a.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\n\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n      <div className='app-header d-flex'>\r\n        <h1>ToDo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n state = {\r\n  term: ''\r\n };\r\n\r\n onSearchChange = (e) => {\r\n  const term = e.target.value;\r\n  this.setState({term});\r\n  this.props.onSearchChange(term);\r\n };\r\n\r\n render(){\r\n  return(\r\n      <input type=\"text\"\r\n             className=\"form-control search-input\"\r\n             placeholder=\"type to search\"\r\n             value={this.state.term}\r\n             onChange={this.onSearchChange}\r\n      />\r\n  )\r\n }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render(){\r\n        const { label, onDeleted, onToggleImportant, onToggleDone,  done, important } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n       if (important) {\r\n           classNames += ' important';\r\n       }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n             <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={ onToggleDone }>\r\n                {label}\r\n             </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick={ onToggleImportant }>\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDeleted}>\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>\r\n    </span>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item/todo-list-iteam\";\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((item)=>{\r\n\r\n        const { id, ...otherItems } = item;\r\n\r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                {...otherItems}\r\n                onDeleted={() => onDeleted(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleDone={() => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n           { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport '../todo-list-item/todo-list-item.css';\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n\r\n    buttons = [\r\n        {\r\n            name: 'all', label: 'All'\r\n        },\r\n        {\r\n            name: 'active', label: 'Active'\r\n        },\r\n        {\r\n            name: 'done', label: 'Done'\r\n        },\r\n\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n             <button\r\n                type=\"button\"\r\n                className={`btn ${clazz}`}\r\n                key={name}\r\n                onClick={() => onFilterChange(name)}>\r\n                {label}\r\n            </button>)\r\n        });\r\n\r\n        return(\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({label: e.target.value});\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdd(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n        <form\r\n        className=\"item-add-form d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n            <input type=\"text\"\r\n                   className=\"form-control\"\r\n                   onChange={this.onLabelChange}\r\n                   placeholder=\"What needs to be done\"\r\n                   value={this.state.label}\r\n            />\r\n            <button className=\"btn btn-outline-secondary text-nowrap\">Add Item</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return{\r\n            label,\r\n            impotrant: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n      this.setState(({todoData}) => {\r\n        const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n        return{\r\n            todoData: newArray\r\n        }\r\n      })\r\n    };\r\n\r\n    addItem = (text) => {\r\n\r\n        const newItem = this.createTodoItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propsName){\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propsName]: !oldItem[propsName]};\r\n        return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    search(items, term){\r\n        if (term === 0){\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item)=> {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n        const toDoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={ toDoCount } done={ doneCount } />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                    onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}/>\r\n                    <ItemAddForm onItemAdd={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));"],"sourceRoot":""}